[{"/Users/cyraalesha/Desktop/build-a-website-2/src/App.js":"1","/Users/cyraalesha/Desktop/build-a-website-2/src/containers/Home.js":"2","/Users/cyraalesha/Desktop/build-a-website-2/src/components/Header.js":"3","/Users/cyraalesha/Desktop/build-a-website-2/src/index.js":"4","/Users/cyraalesha/Desktop/build-a-website-2/src/components/WeatherImage.js":"5","/Users/cyraalesha/Desktop/build-a-website-2/src/components/City.js":"6","/Users/cyraalesha/Desktop/build-a-website-2/src/containers/Details.js":"7","/Users/cyraalesha/Desktop/build-a-website-2/src/components/Music.js":"8","/Users/cyraalesha/Desktop/build-a-website-2/src/components/Background.js":"9"},{"size":480,"mtime":1609398763697,"results":"10","hashOfConfig":"11"},{"size":2186,"mtime":1609476644609,"results":"12","hashOfConfig":"11"},{"size":346,"mtime":1609317888242,"results":"13","hashOfConfig":"11"},{"size":250,"mtime":1609309215000,"results":"14","hashOfConfig":"11"},{"size":890,"mtime":1609418143105,"results":"15","hashOfConfig":"11"},{"size":769,"mtime":1609477074464,"results":"16","hashOfConfig":"11"},{"size":3679,"mtime":1609513990662,"results":"17","hashOfConfig":"11"},{"size":913,"mtime":1609479191232,"results":"18","hashOfConfig":"11"},{"size":347,"mtime":1609480289013,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1kk4t3h",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"/Users/cyraalesha/Desktop/build-a-website-2/src/App.js",[],["44","45"],"/Users/cyraalesha/Desktop/build-a-website-2/src/containers/Home.js",["46"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport City from \"../components/City\";\n\nfunction Home() {\n  const [cities, setCities] = useState([\n    {\n      name: \"London\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-london-background\",\n    },\n    {\n      name: \"Jakarta\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-jakarta-background\",\n    },\n    {\n      name: \"Sydney\",\n      currentTemp: \"0\",\n      weatherType: \"\",\n      color: \"bg-sydney-background\",\n    },\n  ]);\n\n  useEffect(() => {\n    updateAllWeatherData();\n  }, []);\n\n  // Fetch the weather data for 1 city\n  async function fetchWeatherData(cityName) {\n    const res = await axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\n      )\n      .then(function (response) {\n        // Successful request\n        const weather = response.data;\n        return weather;\n      })\n      .catch(function (error) {\n        // The best practice of coding is to not use console.log\n        console.warn(error);\n      });\n\n    return res;\n  }\n\n  // update the list data\n  async function updateAllWeatherData(params) {\n    cities.forEach(function (citiesItems, index) {\n      let weatherData = {};\n      let newCities = [...cities];\n\n      fetchWeatherData(citiesItems.name).then((res) => {\n        weatherData = res;\n\n        newCities[index].currentTemp = `${Math.round(weatherData.main.temp)}째C`;\n        newCities[index].weatherType = weatherData.weather[0].main;\n        setCities(newCities);\n      });\n    });\n  }\n\n  return (\n    // Container\n    <div className=\"flex flex-col items-center h-screen bg-main-background\">\n      {/*cities.map((item, index) => (\n        <City cityName={item.name} temp={item.currentTemp} color={item.color} />\n      ))*/}\n      <div className=\"flex flex-row mt-20 items-center border-black border-opacity-5\">\n        {cities.map((item) => (\n          <City\n            cityName={item.name}\n            temp={item.currentTemp}\n            color={item.color}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/cyraalesha/Desktop/build-a-website-2/src/components/Header.js",[],"/Users/cyraalesha/Desktop/build-a-website-2/src/index.js",[],["47","48"],"/Users/cyraalesha/Desktop/build-a-website-2/src/components/WeatherImage.js",[],"/Users/cyraalesha/Desktop/build-a-website-2/src/components/City.js",[],"/Users/cyraalesha/Desktop/build-a-website-2/src/containers/Details.js",["49","50"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\";\nimport Music from \"../components/Music\";\nimport BackgroundMagic from \"../components/Background\";\n\n// TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"\");\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_WEATHER_KEY);\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\n      )\n      .then(function (response) {\n        // Successful request\n        const weather = response.data;\n        setWeatherData(weather);\n      })\n      .catch(function (error) {\n        // The best practice of coding is to not use console.log\n        console.log(error);\n      });\n  }, [city]);\n\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"name\");\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n\n  const {\n    cloudiness,\n    currentTemp,\n    tempOnly,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed,\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let tempOnly = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}째C`;\n      tempOnly = `${Math.round(weatherData.main.temp)}`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}째C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}째C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      tempOnly,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed,\n    };\n  }, [weatherData]);\n\n  const { backgroundText } = useMemo(() => {\n    let backgroundText = \"\";\n\n    if (tempOnly < 10) {\n      backgroundText = \"bg-gradient-to-r from-green-400 to-blue-500\";\n    } else if (tempOnly < 20) {\n      backgroundText =\n        \"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\";\n    } else if (tempOnly > 20) {\n      backgroundText = \"from-blue-600 to-purple-500 bg-gradient-to-r\";\n    }\n\n    return backgroundText;\n  });\n\n  return (\n    // Container\n    <div\n      className={\n        \"flex flex-col items-center h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 \" +\n        { backgroundText }\n      }\n    >\n      <div className=\"p-8 text-2xl font-bold bg-color-gray-900 text-white\">\n        Weather in {city}\n      </div>\n\n      <div className=\"flex flex-col p-8 m-4 border-2 rounded-md items-center\">\n        <WeatherImage weatherType={weatherType} className=\"text-xl\" />\n        <div>{weatherType}</div>\n        <div>Current Temperature : {currentTemp}</div>\n      </div>\n\n      <div>High Temperature : {highTemp}</div>\n      <div>Cloudiness : {cloudiness}</div>\n      <div>Low Temperature : {lowTemp}</div>\n      <div>Humidity : {humidity}</div>\n      <div>Wind Speed : {windSpeed}</div>\n      <div className=\"absolute right-0 bottom-0\">\n        <Music temp={tempOnly}></Music>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\n","/Users/cyraalesha/Desktop/build-a-website-2/src/components/Music.js",["51","52","53"],"/Users/cyraalesha/Desktop/build-a-website-2/src/components/Background.js",["54"],"import React from \"react\";\n\nfunction BackgroundMagic({ temp }) {\n  if (temp < 10) {\n    return \"bg-gradient-to-r from-green-400 to-blue-500\";\n  } else if (temp < 20) {\n    return \"bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\";\n  } else {\n    return \"from-blue-600 to-purple-500 bg-gradient-to-r\";\n  }\n}\nexport default BackgroundMagic;\n",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":30,"column":6,"nodeType":"63","endLine":30,"endColumn":8,"suggestions":"64"},{"ruleId":"57","replacedBy":"65"},{"ruleId":"59","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":23},{"ruleId":"61","severity":1,"message":"71","line":87,"column":30,"nodeType":"69","endLine":87,"endColumn":37},{"ruleId":"72","severity":1,"message":"73","line":6,"column":7,"nodeType":"74","endLine":13,"endColumn":8},{"ruleId":"72","severity":1,"message":"73","line":17,"column":7,"nodeType":"74","endLine":24,"endColumn":8},{"ruleId":"72","severity":1,"message":"73","line":28,"column":7,"nodeType":"74","endLine":35,"endColumn":8},{"ruleId":"67","severity":1,"message":"75","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"57","replacedBy":"76"},{"ruleId":"59","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateAllWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["80"],["78"],["79"],"no-unused-vars","'BackgroundMagic' is defined but never used.","Identifier","unusedVar","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'React' is defined but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [updateAllWeatherData]",{"range":"83","text":"84"},[598,600],"[updateAllWeatherData]"]